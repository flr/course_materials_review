let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <SNR>47_TdvimFoldDigestToggle :call tdvimFolddigest#FoldDigestToggle()
imap <S-Tab> <Plug>SuperTabBackward
inoremap <C-Tab> 	
inoremap <Down> gj
inoremap <Up> gk
imap <C-Space> "ap
noremap! <C-F1> :Man 
map! <S-Space> 
map! <S-Insert> <MiddleMouse>
nnoremap  :noh/<BS>
noremap  :w
nnoremap s :Scratch
nnoremap t :ScratchFind
noremap   :call ToggleFold()
nmap <silent> #w#t <Plug>VimwikiTabMakeDiaryNote
nmap <silent> #w#w <Plug>VimwikiMakeDiaryNote
nmap <silent> #w#i <Plug>VimwikiDiaryGenerateLinks
nmap <silent> #wi <Plug>VimwikiDiaryIndex
nmap <silent> #ws <Plug>VimwikiUISelect
nmap <silent> #wt <Plug>VimwikiTabIndex
nmap <silent> #ww <Plug>VimwikiIndex
nmap <silent> #cv <Plug>VCSVimDiff
nmap <silent> #cu <Plug>VCSUpdate
nmap <silent> #cU <Plug>VCSUnlock
nmap <silent> #cs <Plug>VCSStatus
nmap <silent> #cr <Plug>VCSReview
nmap <silent> #cq <Plug>VCSRevert
nmap <silent> #cn <Plug>VCSAnnotate
nmap <silent> #cN <Plug>VCSSplitAnnotate
nmap <silent> #cl <Plug>VCSLog
nmap <silent> #cL <Plug>VCSLock
nmap <silent> #ci <Plug>VCSInfo
nmap <silent> #cg <Plug>VCSGotoOriginal
nmap <silent> #cG <Plug>VCSClearAndGotoOriginal
nmap <silent> #cd <Plug>VCSDiff
nmap <silent> #cD <Plug>VCSDelete
nmap <silent> #cc <Plug>VCSCommit
nmap <silent> #ca <Plug>VCSAdd
nmap #ig :IndentGuidesToggle
map #eza <Plug>ToggleEasyAccents
map ,p :call PreviewMarkdown()
nmap K <Plug>ManPageView
nnoremap blog :! python $HOME/.vim/perl/bg.py --f %:p --u iago.mosqueira@gmail.com --p inline
nmap gx <Plug>NetrwBrowseX
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <Plug>VCSVimDiff :VCSVimDiff
nnoremap <silent> <Plug>VCSUpdate :VCSUpdate
nnoremap <silent> <Plug>VCSUnlock :VCSUnlock
nnoremap <silent> <Plug>VCSStatus :VCSStatus
nnoremap <silent> <Plug>VCSSplitAnnotate :VCSAnnotate!
nnoremap <silent> <Plug>VCSReview :VCSReview
nnoremap <silent> <Plug>VCSRevert :VCSRevert
nnoremap <silent> <Plug>VCSLog :VCSLog
nnoremap <silent> <Plug>VCSLock :VCSLock
nnoremap <silent> <Plug>VCSInfo :VCSInfo
nnoremap <silent> <Plug>VCSClearAndGotoOriginal :VCSGotoOriginal!
nnoremap <silent> <Plug>VCSGotoOriginal :VCSGotoOriginal
nnoremap <silent> <Plug>VCSDiff :VCSDiff
nnoremap <silent> <Plug>VCSDelete :VCSDelete
nnoremap <silent> <Plug>VCSCommit :VCSCommit
nnoremap <silent> <Plug>VCSAnnotate :VCSAnnotate
nnoremap <silent> <Plug>VCSAdd :VCSAdd
vnoremap <silent> <SNR>47_TdvimFoldDigestToggle :call tdvimFolddigest#FoldDigestToggle()
nnoremap <silent> <SNR>47_TdvimFoldDigestToggle :call tdvimFolddigest#FoldDigestToggle()
nnoremap <F11> :Scratch
nmap <End> <Plug>BriefEnd
nmap <Home> <Plug>BriefHome
nmap <F10> :SCCompileRun 
nmap <F9> :SCCompile
nnoremap <Down> gj
nnoremap <Up> gk
noremap <C-Down> w
noremap <C-Up> W
nmap <C-Space> "aP
vmap <C-Space> "ay
nmap <F12> :wa|exe "mksession! ./.vim.session"
map <S-Insert> <MiddleMouse>
imap 	 <Plug>SuperTabForward
imap  <Plug>SuperTabForward
imap  <Plug>SuperTabBackward
inoremap  :wi
inoremap  ui
imap #eza <Plug>InsToggleEasyAccents
imap ~N Ñ
imap ~n ñ
iabbr zimhead :call InsertZimHeader()i
let &cpo=s:cpo_save
unlet s:cpo_save
set autochdir
set autoindent
set background=dark
set backspace=start,indent,eol
set breakat=\ \	!@-+;:,./?
set cmdheight=2
set display=lastline
set fileencodings=ucs-bom,utf-8,default,latin1
set guifont=Inconsolata\ 12
set guioptions=gmrT
set helplang=en
set history=50
set hlsearch
set ignorecase
set nojoinspaces
set laststatus=2
set listchars=trail:·,tab:·\ 
set mouse=a
set mousemodel=popup
set path=.,/usr/include,/usr/lib/R/include,,
set printdevice=PDF
set printoptions=paper:letter
set ruler
set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after
set shiftwidth=2
set statusline=%{GitBranchInfoString()}%f\ %y%([%R%M]%)%{'!'[&ff=='unix']}%{'$'[!&list]}%=#%n\ %l/%L,%c\ 
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=2
set tags=~/.vimtags,tags;
set termencoding=utf-8
set titlestring=/home/imosqueira/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR/Intro_FLR.md
set viminfo='20,\"50
set visualbell
set wildmenu
set window=35
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +0 ~/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR/Intro_FLR.md
badd +0 ~/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR/tex/header.tex
args Intro_FLR.md
edit ~/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR/tex/header.tex
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe '1resize ' . ((&lines * 1 + 18) / 36)
exe '2resize ' . ((&lines * 31 + 18) / 36)
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <silent> <S-F9> :BuildAndViewTexPdf
inoremap <buffer> <silent> <F9> :BuildTexPdf
noremap <buffer> <silent> #r :BuildAndViewTexPdf
noremap <buffer> <silent> #m :BuildTexPdf
noremap <buffer> <silent> <S-F9> :BuildAndViewTexPdf
noremap <buffer> <silent> <F9> :BuildTexPdf
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:%\ -,mO:%\ \ ,eO:%%,:%
setlocal commentstring=%%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=\\\\\\([egx]\\|char\\|mathchar\\|count\\|dimen\\|muskip\\|skip\\|toks\\)\\=def\\|\\\\font\\|\\\\\\(future\\)\\=let\\|\\\\new\\(count\\|dimen\\|skip\\|muskip\\|box\\|toks\\|read\\|write\\|fam\\|insert\\)\\|\\\\\\(re\\)\\=new\\(boolean\\|command\\|counter\\|environment\\|font\\|if\\|length\\|savebox\\|theorem\\(style\\)\\=\\)\\s*\\*\\=\\s*{\\=\\|DeclareMathOperator\\s*{\\=\\s*
setlocal dictionary=/usr/share/vim/vim73/syntax/tex.vim
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'tex'
setlocal filetype=tex
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=marker
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\\\input\\|\\\\include{
setlocal includeexpr=substitute(v:fname,\ '^.\\{-}{\\|}.*',\ '',\ 'g')
setlocal indentexpr=GetTeXIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,},],&,=\\bibitem,=\\item
setlocal noinfercase
setlocal iskeyword=48-57,a-z,A-Z,192-255
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{GitBranchInfoString()}%f\ %y%([%R%M]%)%{'!'[&ff=='unix']}%{'$'[!&list]}%=#%n\ %l/%L,%c\ 
setlocal suffixesadd=.tex
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'tex'
setlocal syntax=tex
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 0) / 1)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
edit ~/Work/Projects/training/FLRforQuantFishSci/Sessions/01\ Intro\ to\ FLR/01.02\ Intro\ to\ FLR/Intro_FLR.md
map <buffer> <silent> #nr ya[op$a:
map <buffer> <silent> #br :call pandoc_misc#Pandoc_Back_From_Ref()
map <buffer> <silent> #gr :call pandoc_misc#Pandoc_Goto_Ref()
map <buffer> <silent> #www :call pandoc_misc#Pandoc_Open_URI()
map <buffer> <silent> #odt+ :call pandoc_exec#PandocExecute("pandoc -t odt PANDOC#P_BIBS -o %:r.odt %%", "odt" , 1)
map <buffer> <silent> #odt :call pandoc_exec#PandocExecute("pandoc -t odt PANDOC#P_BIBS -o %:r.odt %%", "odt", 0)
map <buffer> <silent> #pdf+ :call pandoc_exec#PandocExecute("pandoc PANDOC#P_BIBS -o %:r.pdf %%", "pdf" , 1)
map <buffer> <silent> #pdf :call pandoc_exec#PandocExecute("pandoc PANDOC#P_BIBS -o %:r.pdf %%", "pdf", 0)
map <buffer> <silent> #html+ :call pandoc_exec#PandocExecute("pandoc -t html -Ss -o %:r.html %%", "html" , 1)
map <buffer> <silent> #html :call pandoc_exec#PandocExecute("pandoc -t html -Ss -o %:r.html %%", "html", 0)
vnoremap <buffer> $ g$
nnoremap <buffer> $ g$
vnoremap <buffer> 0 g0
nnoremap <buffer> 0 g0
vnoremap <buffer> ^ g^
nnoremap <buffer> ^ g^
vnoremap <buffer> j gj
nnoremap <buffer> j gj
vnoremap <buffer> k gk
nnoremap <buffer> k gk
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s:<!--,m:\ \ \ \ ,e:-->
setlocal commentstring=<!--%s-->
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=/usr/share/vim/vim73/syntax/markdown.vim,/home/imosqueira.,/usr/share/vim/vim73/syntax/pandoc.vim
setlocal nodiff
setlocal equalprg=pandoc\ -t\ markdown\ --reference-links
setlocal errorformat=
setlocal noexpandtab
if &filetype != 'pandoc'
setlocal filetype=pandoc
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=pandoc#MarkdownLevel()
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
set foldmethod=marker
setlocal foldmethod=expr
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=1
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=48-57,a-z,A-Z,192-255
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
set list
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=pandoc#Pandoc_Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{GitBranchInfoString()}%#StatColor#%f%*\ %y%([%R%M]%)%{'!'[&ff=='unix']}%{'$'[!&list]}%=#%n\ %l/%L,%c\ 
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'pandoc'
setlocal syntax=pandoc
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 1 - ((0 * winheight(0) + 15) / 31)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
2wincmd w
exe '1resize ' . ((&lines * 1 + 18) / 36)
exe '2resize ' . ((&lines * 31 + 18) / 36)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
